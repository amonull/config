[module/launcher]
type = custom/text

; content = ""
content = ""
content-foreground = ${colors.primary}

click-left = $HOME/.config/polybar/scripts/rofi/launcher.sh

######################################################

[module/powermenu]
type = custom/text

; content = ""
content = ""
content-foreground = ${colors.blue}

# click-left = $HOME/.config/polybar/scripts/rofi/powermenu/type-4/powermenu.sh
click-left = "loginctl reboot"

######################################################

[module/date-calander]
type = custom/script
exec = date '+%I:%M:%S'
tail = true
#click-left = urxvt -e calcurse
click-left = $HOME/.config/polybar/scripts/bottom-right-cal-startup.sh
label = %output%
interval = 1
format-foreground = ${colors.yellow}

######################################################

[module/xbps-updates]
type = custom/script
exec = $HOME/.config/polybar/scripts/check-updates.sh
# 60 = 1 min, 300 = 5 mins, 3600 = 1 hr
interval = 3600

######################################################

# for AMD GPU text is not fixed and causes it to move around
[module/system-ati-radeontop]
type = custom/script
#exec = radeontop -d - -i 1 | grep --line-buffered -oP "gpu \K\d{1,3}"
exec = $HOME/.config/polybar/scripts/system-ati-radeontop.sh
tail = true
format-prefix = %{A1:alacritty -e radeontop -T:}GPU  %{A}
format-prefix-foreground = ${colors.primary}
format = %{A1:alacritty --hold -e radeontop -T:}<label>%%{A}

######################################################

# for intel GPU
# MUST PUT {user ALL=(ALL) NOPASSWD: /usr/bin/intel_gpu_frequency, /usr/bin/intel_gpu_top} in /etc/sudoers
[module/system-gpu-intel]
type = custom/script
exec = $HOME/.config/polybar/scripts/system-gpu-intel.sh
format = %{A1:alacritty -e sudo intel_gpu_top:}GPU%{F#FFF}<label>%{A}
format-foreground = ${colors.primary}
interval = 2

######################################################

[module/temp]
type = custom/script
exec = acpi -t | awk '{print $4}'
label = %output% 
format = ﲾ %{F#FFF}<label>
format-foreground = ${colors.primary}

######################################################

[module/temperature]
type = internal/temperature

; Seconds to sleep between updates
interval = 3

; Thermal zone to use
; To list all the zone types, run 
; $ for i in /sys/class/thermal/thermal_zone*; do echo "$i: $(<$i/type)"; done
; Default: 0
thermal-zone = 0

; Full path of temperature sysfs path
; Use `sensors` to find preferred temperature source, then run
; $ for i in /sys/class/hwmon/hwmon*/temp*_input; do echo "$(<$(dirname $i)/name): $(cat ${i%_*}_label 2>/dev/null || echo $(basename ${i%_*})) $(readlink -f $i)"; done
; to find path to desired file
; Default reverts to thermal zone setting
hwmon-path = /sys/class/hwmon/hwmon5/temp5_input

; Base temperature for where to start the ramp (in degrees celsius)
; Default: 0
base-temperature = 20

; Threshold temperature to display warning label (in degrees celsius)
; Default: 80
warn-temperature = 65

label =  %{F#FFF}%temperature-c%
label-foreground = ${colors.primary}

label-warn =  %temperature-c%
label-warn-foreground = ${colors.alert}

format = %{A1:alacritty --hold -e sensors:}<label>%{A}
format-warn = %{A2:alacritty --hold -e sensors:}<label-warn>%{A}
